// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _probitCppFatCat_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// probCpp
NumericVector probCpp(NumericVector alfa, NumericVector beta, NumericVector f, double sigma2);
RcppExport SEXP _probitCppFatCat_probCpp(SEXP alfaSEXP, SEXP betaSEXP, SEXP fSEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alfa(alfaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type f(fSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(probCpp(alfa, beta, f, sigma2));
    return rcpp_result_gen;
END_RCPP
}
// logcondcompbetajCpp
double logcondcompbetajCpp(NumericMatrix f, NumericVector beta, NumericVector alfa, double sigma2, NumericMatrix y, int j);
RcppExport SEXP _probitCppFatCat_logcondcompbetajCpp(SEXP fSEXP, SEXP betaSEXP, SEXP alfaSEXP, SEXP sigma2SEXP, SEXP ySEXP, SEXP jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type f(fSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alfa(alfaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    rcpp_result_gen = Rcpp::wrap(logcondcompbetajCpp(f, beta, alfa, sigma2, y, j));
    return rcpp_result_gen;
END_RCPP
}
// logcondcompfiCpp
double logcondcompfiCpp(NumericVector f, NumericMatrix beta, NumericMatrix alfa, NumericVector sigma2, NumericMatrix y, int i);
RcppExport SEXP _probitCppFatCat_logcondcompfiCpp(SEXP fSEXP, SEXP betaSEXP, SEXP alfaSEXP, SEXP sigma2SEXP, SEXP ySEXP, SEXP iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type f(fSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type alfa(alfaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    rcpp_result_gen = Rcpp::wrap(logcondcompfiCpp(f, beta, alfa, sigma2, y, i));
    return rcpp_result_gen;
END_RCPP
}
// logcondcompsigma2jCpp
double logcondcompsigma2jCpp(NumericMatrix f, NumericVector beta, NumericVector alfa, double sigma2, NumericMatrix y, int j);
RcppExport SEXP _probitCppFatCat_logcondcompsigma2jCpp(SEXP fSEXP, SEXP betaSEXP, SEXP alfaSEXP, SEXP sigma2SEXP, SEXP ySEXP, SEXP jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type f(fSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alfa(alfaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    rcpp_result_gen = Rcpp::wrap(logcondcompsigma2jCpp(f, beta, alfa, sigma2, y, j));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_probitCppFatCat_rcpp_hello_world", (DL_FUNC) &_probitCppFatCat_rcpp_hello_world, 0},
    {"_probitCppFatCat_probCpp", (DL_FUNC) &_probitCppFatCat_probCpp, 4},
    {"_probitCppFatCat_logcondcompbetajCpp", (DL_FUNC) &_probitCppFatCat_logcondcompbetajCpp, 6},
    {"_probitCppFatCat_logcondcompfiCpp", (DL_FUNC) &_probitCppFatCat_logcondcompfiCpp, 6},
    {"_probitCppFatCat_logcondcompsigma2jCpp", (DL_FUNC) &_probitCppFatCat_logcondcompsigma2jCpp, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_probitCppFatCat(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
